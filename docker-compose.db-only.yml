# Docker Compose - PostgreSQL Only
# Use this to run PostgreSQL separately, then connect multiple app servers to it
# Usage: docker-compose -f docker-compose.db-only.yml up -d

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: minesweeper-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-minesweeper}
      POSTGRES_USER: ${POSTGRES_USER:-minesweeper_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      # Expose on all interfaces so remote servers can connect
      - "0.0.0.0:${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker-init:/docker-entrypoint-initdb.d
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-minesweeper_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - minesweeper-network

networks:
  minesweeper-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local

